/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R   &kp T        &kp Y      &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F   &kp G        &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V   &kp B        &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RET
                         &kp LGUI  &tog 1  &kp SPACE    &kp SPACE  &tog 2  &kp RALT
            >;
        };

        TK_Arrow {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "TKArrow";
            bindings = <
&kp TAB    &trans    &kp UP    &trans     &trans  &kp K_CALCULATOR    &trans     &kp N7  &kp N8  &kp N9  &trans  &kp BSPC
&kp LSHFT  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans              &kp DOT    &kp N4  &kp N5  &kp N6  &trans  &trans
&kp LCTRL  &trans    &trans    &trans     &trans  &trans              &kp N0     &kp N1  &kp N2  &kp N3  &trans  &kp RET
                               &kp LGUI   &tog 0  &kp SPACE           &kp SPACE  &tog 2  &tog 3
            >;
        };

        Symbol_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Symbol";
            bindings = <
&kp TAB    &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LSHFT  &trans     &trans     &trans     &kp LC(F)  &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LCTRL  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                 &kp LGUI   &tog 0     &kp SPACE    &kp RET    &tog 1     &tog 3
            >;
        };

        Sys_Layer {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &kp C_MUTE       &trans          &trans            &kp C_BRI_UP  &kp C_BRI_DEC  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_VOLUME_UP  &trans          &trans            &trans        &trans         &trans
&trans      &trans        &trans        &trans        &trans        &trans          &kp C_VOL_DN     &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &trans         &trans
                                        &kp LEFT_GUI  &tog 0        &kp SPACE       &kp RET          &tog 1          &tog 2
            >;

            label = "System";
        };
    };
};
